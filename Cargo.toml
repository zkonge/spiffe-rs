[workspace]
resolver = "2"
members = ["spiffe-id"]

[workspace.package]
edition = "2024"

[workspace.dependencies]
thiserror = { version = "2.0.12", default-features = false }
serde = { version = "1.0.219", default-features = false, features = ["alloc"] }

[package]
name = "spiffe"
version = "0.0.0"
edition.workspace = true

[dependencies]
spiffe-id = { path = "spiffe-id", optional = true }

prost = "0.13.5"
prost-types = "0.13.5"

tonic = { version = "0.13.0", default-features = false, features = [
    "prost",
], optional = true }
futures-util = { version = "0.3.31", default-features = false, features = [
    "alloc",
], optional = true }
http = { version = "1.3.1", optional = true }
http-body = { version = "1.0.1", optional = true }

# Used for the `wrapper` feature
thiserror = { workspace = true, default-features = false, optional = true }
rustls-pki-types = { version = "1.11.0", features = [
    "alloc",
], default-features = false, optional = true }
tower-service = { version = "0.3.3", optional = true }
serde_json = { version = "1.0.140", default-features = false, features = [
    "alloc",
], optional = true }
serde = { workspace = true, features = [
    "derive",
], default-features = false, optional = true }
base64ct = { version = "1.8.0", default-features = false, features = [
    "alloc",
], optional = true }

[dev-dependencies]
const-decoder = "0.4.0"

[features]
default = ["wrapper", "client", "jwt"]

# high-level wrapper around the low-level workload APIs
wrapper = ["dep:thiserror", "dep:rustls-pki-types", "dep:spiffe-id"]

# enable JWT support in wrapper
jwt = ["wrapper", "dep:base64ct", "dep:serde", "dep:serde_json"]

# allow to create high-level types without checking the validation
unchecked-api = []

# low-level APIs, exposed as `spiffe::proto`, if you want to implement your own workload API
low-level = []

# client abstraction, without this, only basic types are available
client = ["_grpc"]
server = ["_grpc"]

_grpc = [
    "dep:tonic",
    "dep:futures-util",
    "dep:http",
    "dep:http-body",
    "dep:tower-service",
]

[profile.release]
opt-level = "s"
lto = true
